import type {NextPage} from 'next'
import Head from 'next/head'
import BodySingle from "dh-marvel/components/layouts/body/single/body-single";
import Box from '@mui/material/Box';
import Grid from '@mui/material/Grid';
import { CardComic } from 'dh-marvel/components/ui/card/CardComic';
import { getComics } from 'dh-marvel/services/marvel/marvel.service';
import { Comic } from 'dh-marvel/features/marvel/comic.types';
import Pagination from '@mui/material/Pagination';
import { useRouter } from 'next/router';
import React from 'react';
import { log } from 'console';

const INITIAL_OFFSET = 0;
const INITIAL_LIMIT = 12;

interface Props{
   comics: any
   total: number
}

const Index: NextPage<Props> = ({comics, total}) => {
    const router = useRouter();    
    const [page, setPage] = React.useState(1)
    const [comicsApi, setComicsApi] = React.useState(comics);
    
    
    
    React.useEffect(() => {
        const offset = INITIAL_LIMIT * (page);
        console.log(offset)        
        getComics(offset, INITIAL_LIMIT).then(res => {
            console.log(res.data);
            
          setComicsApi(res?.data?.results);
        //   setTotalApi(response?.data?.total);
        });
    
        localStorage.clear();
      }, [page]);
    

    const handlePageChange = (e:any, page:any) => {        
        console.log(page);     
        setPage(page)          
        // router.push(`?page=${page}`);   
     };

          
    return (
        <>  
            <Head>
                <title>DH-Marvel Store</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>
            <BodySingle title={"Bienvenido a DH-Marvel Store"}>
                <Box sx={{ flexGrow: 1 }}>
                <Grid display="flex" justifyContent="center" alignItems="center">
                    <Pagination onChange={handlePageChange}  sx={{margin: 1}}count={Math.ceil(total / 12)} defaultPage={1} siblingCount={0} boundaryCount={2} />                
                </Grid>
                <Grid sx={{margin: 5}} container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>
                    {comicsApi.map((comic:any)=>(
                        <Grid item xs={2} sm={4} md={4} key={comic.id}>
                            <CardComic key={comic.id}
                                title={comic.title}                                 
                                image = {comic.images[0]}                                        
                            ></CardComic>                          
                        </Grid>
                    ))}
                </Grid>
                </Box>
            </BodySingle>      
        </>
    )
}

export default Index


export const getServerSideProps = async () => { 
    const res = await getComics(INITIAL_OFFSET, INITIAL_LIMIT)    
    const comics = res?.data?.results || [];
    const limit = res?.data?.count ?? null;
    const total = res?.data?.total ?? null;

    return {
         props: {             
                comics,
                limit,
                total              
         }
     }
}